<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pbboard.user.mapper.UserMapper">
    <!-- 아이디 찾기 -->
    <select id="findByMemberId" parameterType="String"
            resultType="com.pbboard.user.domain.UserInfo">
       select name, id, password, 'ROLE_USER' as auth,
       um.account_Expired as accountExpired,
       um.account_locked as accountLocked,
       um.cre_expired as creExpired,
       um.enabled as enabled,
       u.seq as seq
       from user_tbl3 u , user_mng_tbl3 um
       where u.id = #{id}
       and u.seq = um.user_seq
    </select>

    <!--
    <select id="findByMemberId" parameterType="String"
            resultType="com.pbboard.user.domain.UserInfo">
        select name, id, password, 'ROLE_USER' as auth,
       u.account_Expired as accountExpired,
       u.account_locked as accountLocked,
       u.cre_expired as creExpired,
       u.enabled as enabled
       from member_tbl2 m, user_mng_tbl2 u
       where id = #{id}
       and u.user_id = m.id
    </select>-->

    <!-- 권한 사용할 때 쿼리 -->
    <!-- select m.name, ua.id as id, m.password as password, a.authority as auth,
       um.account_expired as accountExpired,
       um.account_locked as accountLocked,
       um.cre_expired as creExpired,
       um.enabled as enabled
       from user_authority_tbl2 ua, member_tbl2 m, authority2 a, user_mng_tbl2 um
       where ua.id = m.id
       and ua.authority_seq = a.seq
       and um.user_id = m.id
       and ua.id = #{id} -->

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="com.pbboard.user.domain.UserInfoDTO">
    insert into user_tbl3(seq ,id, password, name, phone,
    email, reg_dt, mod_dt, del_yn, nickName, address)
    values (user_sequence.nextval , #{id}, #{password}, #{name},
    #{phone}, #{email}, sysDate, sysDate, 'n', #{nickName}, #{address})
    </insert>

    <!-- 로그인 실패시 로그인실패 횟수 추가 -->
    <update id="countFailure" parameterType="String">
        update user_tbl3
        set login_fail_cnt = login_fail_cnt + 1
        where id = #{id}
    </update>

    <!-- 로그인 실패횟수 점검 -->
    <select id="checkFailureCount" resultType="int"
                                    parameterType="String">
        select login_fail_cnt
        from user_tbl3
        where id=#{id}
    </select>

    <!-- 계정 잠금 처리 -->
    <update id="disabledUsername" parameterType="String">
       update user_mng_tbl3
       set account_locked = 0
       where user_seq = (select seq from user_tbl3 where id= #{id})
    </update>
    <!--update user_mng_tbl3
    set account_Locked = 0
    where user_id = #{id}-->
    <!-- 로그인 실패횟수 초기화 -->
    <update id="resetLoginFailureCount" parameterType="String">
        update user_tbl3
        set login_fail_cnt = 0
        where id= #{id}
    </update>

    <!-- 아이디 중복 조회 -->
    <select id="checkId" parameterType="String" resultType="com.pbboard.user.domain.UserInfo">
        select id
        from user_tbl3
        where id=#{id}
    </select>

    <!-- 계정 관리 정보 -->
    <insert id="insertIdAuthentication" parameterType="com.pbboard.user.domain.UserInfoDTO">
        insert into user_mng_tbl3
        (select
        seq, 1 as account_expired,
         1 as account_locked,
         1 as cre_expired,
         1 as enabled
         from user_tbl3 where id = #{id})
    </insert>

<!--    <insert id="insertIdAuthentication2" parameterType="com.pbboard.user.domain.UserInfoDTO">
        insert into user_mng_tbl3(user_seq, account_expired, account_locked, cre_expired, enabled)
        values(#{userSeq}, 1,1,1,1)
    </insert>-->

    <!-- 권한 부여 (사용x)-->
    <insert id="authorizationUser" parameterType="String">
        insert into user_authority_tbl2
        values(#{userId}, 2)
    </insert>
    <!---->

    <insert id="registerUser" parameterType="com.pbboard.user.domain.UserInfoDTO">
        insert into user_tbl3(seq, id, email, token, reg_dt)
        values(user_sequence.nextval, #{id}, #{email}, #{token}, sysDate)
    </insert>

    <select id="selectEmailToken" parameterType="com.pbboard.user.domain.UserInfoDTO"
                                resultType="String">
        select token
        from user_tbl3
        where id=#{id}
        and email=#{email}
    </select>

    <update id="updateEmailToken" parameterType="com.pbboard.user.domain.UserInfoDTO">
        update user_tbl3
        set token = 'y'
        where id=#{id}
        and email=#{email}
    </update>

    <update id="updateUserInfo" parameterType="com.pbboard.user.domain.UserInfoDTO">
        update user_tbl3
        set password = #{password},
         name = #{name},
         phone=#{phone},
         del_yn='n',
         address=#{address},
         nickName = #{nickName}
         where id=#{id}
          and email=#{email}
    </update>
</mapper>